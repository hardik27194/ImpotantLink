AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
                NSString *combined = [NSString stringWithFormat:@"%@%@", @"",_usersenderID];
                
             //   https://github.com/wysaid?tab=repositories
                NSURL *URL = [NSURL URLWithString:combined];
                manager.requestSerializer=[AFJSONRequestSerializer serializer];
                //    manager.responseSerializer.acceptableContentTypes=[NSSet setWithObject:@"text/html"];
                // AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
                
                [manager GET:URL.absoluteString parameters:nil progress:nil success:^(NSURLSessionTask *task, id responseObject) {
                    // NSLog(@"JSON: %@", responseObject);
 }];
 }failure:^(NSURLSessionTask operation, NSError error) {
                    NSLog(@"Error: %@", error);
                    
                    
                }];
                AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    NSDictionary *params = @{@"user_id": finaluserid,
                             @"message": text,
                             @"to": uploadotheruseridarraystring,
                             @"chat_room_id":_usersenderID,
                             @"status":@"0"};
    [manager POST:combined parameters:params progress:nil success:^(NSURLSessionTask *task, id responseObject) {
        NSLog(@"JSON: %@", responseObject);
        [self getdataofmessage];
    } failure:^(NSURLSessionTask operation, NSError error) {
        NSLog(@"Error: %@", error);
    }];
https://www.dreamstime.com/
https://github.com/vedharish/Specs
http://downloadclipart.org/do-upload/category/
http://objective-c-code.blogspot.in/
https://insurgentgames.com/
http://www.dictie.ro/wp-content/uploads/
http://weloveiconfonts.com/api/fonts/

   NSDictionary *headers = @{ @"content-type": @"multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
                               @"authorization": @"Basic Og==",
                               @"cache-control": @"no-cache",
                               @"postman-token": @"0478498e-5b34-537f-ecad-08538db20e0d" };
    NSArray *parameters = @[ @{ @"name": @"apikey", @"value": @"hideKey" } ];
    NSString *boundary = @"----WebKitFormBoundary7MA4YWxkTrZu0gW";
    
    NSError *error;
    NSMutableString *body = [NSMutableString string];
    for (NSDictionary *param in parameters) {
        [body appendFormat:@"--%@\r\n", boundary];
        if (param[@"fileName"]) {
            [body appendFormat:@"Content-Disposition:form-data; name=\"%@\"; filename=\"%@\"\r\n", param[@"name"], param[@"fileName"]];
            [body appendFormat:@"Content-Type: %@\r\n\r\n", param[@"contentType"]];
            [body appendFormat:@"%@", [NSString stringWithContentsOfFile:param[@"fileName"] encoding:NSUTF8StringEncoding error:&error]];
            if (error) {
                NSLog(@"%@", error);
            }
        } else {
            [body appendFormat:@"Content-Disposition:form-data; name=\"%@\"\r\n\r\n", param[@"name"]];
            [body appendFormat:@"%@", param[@"value"]];
        }
    }
    [body appendFormat:@"\r\n--%@--\r\n", boundary];
    NSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];
    
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"Url"]
                                                           cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                       timeoutInterval:10.0];
    [request setHTTPMethod:@"POST"];
    [request setAllHTTPHeaderFields:headers];
    [request setHTTPBody:postData];
    
    NSURLSession *session = [NSURLSession sharedSession];
    NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                    if (error) {
                                                        NSLog(@"%@", error);
                                                    } else {
                                                        NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                        NSLog(@"%@", httpResponse);
                                                    }
                                                }];
    [dataTask resume];

//   --------------------------------------
    NSDictionary *headers = @{ @"cache-control": @"no-cache",
                               @"postman-token": @"1b0a88f4-22bd-a00b-46e0-bd65190e84b9" };
    
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"Url"]
                                                           cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                       timeoutInterval:10.0];
    [request setHTTPMethod:@"GET"];
    [request setAllHTTPHeaderFields:headers];
    
    NSURLSession *session = [NSURLSession sharedSession];
    NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                    
                                                    
                                                    if (error) {
                                                        NSLog(@"%@", error);
                                                    } else {
                                                        NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                        NSLog(@"%@", httpResponse);
                                                    }
                                                }];
    [dataTask resume];


-----------Kvo 
